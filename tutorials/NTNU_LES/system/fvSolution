/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    p
    {
        solver          		GAMG;
        tolerance       		1e-06;
        relTol          		0.01;
        smoother        		DIC;
		nPreSweeps				0;
		nPostSweeps				2;
		nFinestSweeps			2;
        cacheAgglomeration 		true;
        nCellsInCoarsestLevel 	10;
        agglomerator    		faceAreaPair;
        mergeLevels    		 	2;
    }

    pFinal
    {
        solver          		GAMG;
        tolerance       		1e-08;
        relTol          		0;
        smoother        		DIC;
		nPreSweeps				0;
		nPostSweeps				2;
		nFinestSweeps			2;
        cacheAgglomeration 		true;
        nCellsInCoarsestLevel 	10;
        agglomerator    		faceAreaPair;
        mergeLevels     		2;
    }

    Phi
    {
        $p;
    }


    "(U|k|omega)"
    {
        solver          PBiCGStab;
		//solver			smoothSolver;
        preconditioner  DILU;
        tolerance       1e-06;
        relTol          0.01;
		maxIter			1000;
    }

    "(U|k|omega)Final"
    {
        solver          PBiCGStab;
		//solver			smoothSolver;
        preconditioner  DILU;
        tolerance       1e-06;
        relTol          0;
    }
}

PIMPLE
{
    nOuterCorrectors 		 	1;
    nCorrectors     		 	2;
    nNonOrthogonalCorrectors 	0;
    pRefCell        			0;
    pRefValue       			0;
}

cache
{
    grad(U);
}

potentialFlow
{
    nNonOrthogonalCorrectors 0;
}


// ************************************************************************* //
